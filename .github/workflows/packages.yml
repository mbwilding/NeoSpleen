name: Package Managers

on:
  workflow_dispatch:
  push:

jobs:
  packages:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Git
      env:
        SSH_CONFIG: ${{ vars.SSH_CONFIG }}
        PRIVATE_PERSONAL: ${{ secrets.PRIVATE_PERSONAL }}
        PRIVATE_AUR: ${{ secrets.PRIVATE_AUR }}
      run: |
        set -euo pipefail

        git config --global user.name "Matthew Wilding"
        git config --global user.email "mbwilding@gmail.com"

        ssh_path="$HOME/.ssh"
        install -d -m 700 "$ssh_path"

        # Write SSH configuration and keys securely using printf
        printf "%s" "$SSH_CONFIG" > "$ssh_path/config"
        chmod 600 "$ssh_path/config"

        printf "%s" "$PRIVATE_PERSONAL" > "$ssh_path/personal"
        chmod 600 "$ssh_path/personal"

        printf "%s" "$PRIVATE_AUR" > "$ssh_path/aur"
        chmod 600 "$ssh_path/aur"

    - name: Clone
      env:
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
      run: |
        git clone --depth 1 git@github.com:mbwilding/homebrew-neospleen.git
        git clone --depth 1 aur@aur.archlinux.org:ttf-neospleen.git
        git clone --depth 1 aur@aur.archlinux.org:ttf-neospleen-nerd-font.git

    - name: Homebrew
      run: |
        set -e

        cd homebrew-neospleen

        # You might uncomment version check if needed
        # if [ -z "$VERSION" ]; then
        #   echo "Error: VERSION environment variable is not set."
        #   exit 1
        # fi
        VERSION="2.3.4"

        for f in Casks/*.rb; do
          echo "Processing $f..."

          # Extract the URL pattern line from the file (assumes it starts with "url ")
          url_pattern=$(grep -E '^[[:space:]]*url ' "$f" | head -n 1 | sed -E 's/.*url "(.*)".*/\1/')

          if [ -z "$url_pattern" ]; then
            echo "No URL pattern found in $f, skipping..."
            continue
          fi

          # Replace "#{version}" with the new version (escape the curly braces in sed)
          new_url=$(echo "$url_pattern" | sed "s/#\{version\}/$VERSION/g")
          echo "Updated URL: $new_url"

          echo "Downloading file from ${new_url}..."

          temp_zip="/tmp/artifact.zip"

          # Download the file
          curl -L -o "$temp_zip" "$new_url"

          # Calculate the sha256 checksum
          new_sha256=$(shasum -a 256 "$temp_zip" | awk '{print $1}')
          echo "New sha256: $new_sha256"

          rm "$temp_zip"

          sed -i \
            -e "s/version \".*\"/version \"$VERSION\"/" \
            -e "s#url \".*\"#url \"$new_url\"#" \
            -e "s/sha256 \".*\"/sha256 \"$new_sha256\"/" "$f"

          echo "Updated $f"

          cat $f
        done

name: Package Managers

on:
  workflow_dispatch:
  push:

jobs:
  packages:
    runs-on: ubuntu-latest
    steps:
    # - name: Checkout
    #   uses: actions/checkout@v4

    - name: Set Version
      run: echo "VERSION=1.0.57" >> $GITHUB_ENV

    - name: Setup Git
      env:
        SSH_CONFIG: ${{ vars.SSH_CONFIG }}
        PRIVATE_PERSONAL: ${{ secrets.PRIVATE_PERSONAL }}
        PRIVATE_AUR: ${{ secrets.PRIVATE_AUR }}
      run: |
        set -euo pipefail

        git config --global user.name "Matthew Wilding"
        git config --global user.email "mbwilding@gmail.com"

        ssh_path="$HOME/.ssh"
        install -d -m 700 "$ssh_path"

        # Write SSH configuration and keys securely using printf
        printf "%s" "$SSH_CONFIG" > "$ssh_path/config"
        chmod 600 "$ssh_path/config"

        printf "%s" "$PRIVATE_PERSONAL" > "$ssh_path/personal"
        chmod 600 "$ssh_path/personal"

        printf "%s" "$PRIVATE_AUR" > "$ssh_path/aur"
        chmod 600 "$ssh_path/aur"

    - name: Download Artifacts
      run: |
        download_file () {
            file="$1"
            url="$2"
            echo "Downloading: ${url}"
            http_status=$(curl -L -s -w "%{http_code}" -o "$file" "$url")
            if [ "$http_status" != "200" ]; then
              echo "Error: Expected HTTP 200 but got $http_status"
              exit 1
            fi
        }

        download_file "/tmp/neospleen.zip" "https://github.com/mbwilding/NeoSpleen/releases/download/${VERSION}/NeoSpleen-TTF.zip"
        download_file "/tmp/neospleen-nerdfont.zip" "https://github.com/mbwilding/NeoSpleen/releases/download/${VERSION}/NeoSpleenNerdFont-TTF.zip"

    # - name: Homebrew
    #   env:
    #     GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
    #   run: |
    #     set -euo pipefail
    #
    #     git clone --depth 1 git@github.com:mbwilding/homebrew-neospleen.git
    #     cd homebrew-neospleen
    #
    #     process_file () {
    #         file=$1
    #         zip=$2
    #
    #         echo "Processing: $file"
    #
    #         echo "Generating sha256"
    #         sha256=$(sha256sum "$zip" | awk '{print $1}')
    #         echo "$sha256"
    #
    #         sed -i "s|version \"[^\"]*\"|version \"$VERSION\"|" "$file"
    #         sed -i "s|sha256 \"[^\"]*\"|sha256 \"$sha256\"|" "$file"
    #     }
    #
    #     process_file "Casks/font-neospleen.rb" "/tmp/neospleen.zip"
    #     process_file "Casks/font-neospleen-nerd-font.rb" "/tmp/neospleen-nerdfont.zip"
    #
    #     git add .
    #     git commit -m "Updated to version: $VERSION"
    #     git push

    - name: AUR
      env:
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
      run: |
        set -euo pipefail

        file_src=".SRCINFO"
        file_pkg="PKGBUILD"

        process_file () {
            repo="$1"
            zip="$2"

            git clone --depth 1 aur@aur.archlinux.org:${repo}.git
            pushd "$repo"

            echo "Generating b2sums"
            b2sums=$(b2sum "$zip" | awk '{print $1}')
            echo "$b2sums"

            VERSION="9.9.9"
            b2sums="aoenuthaonetuhoeanstuh23423423"

            echo "Processing: $file_src"
            sed -i "s|^\([[:space:]]*pkgver[[:space:]]*=[[:space:]]*\).*|\1$VERSION|" "$file_src"
            sed -i "s|^\([[:space:]]*b2sums[[:space:]]*=[[:space:]]*\).*|\1$b2sums|" "$file_src"
            sed -i "s|\(releases/download/\)[^/]*|\1$VERSION|" "$file_src"
            cat $file_src

            echo "Processing: $file_pkg"
            sed -i "s|^\(pkgver=\).*|\1$VERSION|" "$file_pkg"
            sed -i "s|^\(b2sums=\).*|\1('$b2sums')|" "$file_pkg"
            cat $file_pkg

            # git add .
            # git commit -m "Updated to version: $VERSION"
            # git push

            popd
        }

        process_file "ttf-neospleen" "/tmp/neospleen.zip"
        process_file "ttf-neospleen-nerd-font" "/tmp/neospleen-nerdfont.zip"
